{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dmast\\\\AppData\\\\Local\\\\GitHubDesktop\\\\Projects\\\\to-do-list_week1-DevByDJ\\\\to-do-list_week1-DevByDJ\\\\src\\\\component\\\\AddTodo.js\";\nimport React, { Component } from \"react\";\nimport { Button, TextField } from \"@mui/material\";\nimport \"../component/todos.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst styles = theme => ({\n  notchedOutline: {\n    borderWidth: \"1px\",\n    borderColor: \"yellow !important\"\n  }\n});\n\nclass AddTodo extends Component {\n  // A local react state of the this component with a content property set to nothing.\n  constructor() {\n    super();\n\n    this.handleChange = event => {\n      this.setState({\n        content: event.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      event.preventDefault();\n\n      if (this.state.content.trim()) {\n        this.props.addTodo(this.state);\n        this.setState({\n          content: \"\"\n        });\n      }\n    };\n\n    this.state = {\n      content: \"\"\n    };\n  } // The handleChange function updates the react state with the new input value provided from the user.\n  // \"event\" is the defined action a user takes. In this case, the event is triggered when the user types something\n  // into the text field.\n\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // 1. The return statement should include a text field input with the handleChange function from above that\n      // is passed into an onChange event.\n      // 2. The return should also include a button with the handleSubmit function from above that is passed into\n      // an OnClick event.\n      // 3. The value of the text field also should reflect the local state of this component.\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          sx: {\n            input: {\n              color: 'white'\n            },\n            label: {\n              color: 'white'\n            }\n          },\n          inputProps: {\n            styles: {\n              notchedOutline: styles.notchedOutline\n            }\n          },\n          label: \"Add New Item\",\n          variant: \"outlined\",\n          color: \"primary\",\n          onChange: this.handleChange,\n          value: this.state.content,\n          \"data-testid\": \"new-item-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginLeft: \"10px\"\n          },\n          onClick: this.handleSubmit,\n          variant: \"contained\",\n          color: \"primary\",\n          \"data-testid\": \"new-item-button\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    );\n  }\n\n}\n\nexport default AddTodo;","map":{"version":3,"names":["React","Component","Button","TextField","styles","theme","notchedOutline","borderWidth","borderColor","AddTodo","constructor","handleChange","event","setState","content","target","value","handleSubmit","preventDefault","state","trim","props","addTodo","render","input","color","label","marginLeft"],"sources":["C:/Users/Dmast/AppData/Local/GitHubDesktop/Projects/to-do-list_week1-DevByDJ/to-do-list_week1-DevByDJ/src/component/AddTodo.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport { Button, TextField } from \"@mui/material\";\r\nimport \"../component/todos.css\";\r\n\r\nconst styles = theme => ({\r\n  notchedOutline: {\r\n    borderWidth: \"1px\",\r\n    borderColor: \"yellow !important\"\r\n  }\r\n});\r\n\r\n\r\nclass AddTodo extends Component {\r\n    // A local react state of the this component with a content property set to nothing.\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        content: \"\",\r\n      };\r\n    }\r\n    // The handleChange function updates the react state with the new input value provided from the user.\r\n    // \"event\" is the defined action a user takes. In this case, the event is triggered when the user types something\r\n    // into the text field.\r\n    handleChange = (event) => {\r\n      this.setState({\r\n        content: event.target.value,\r\n      });\r\n    };\r\n    // The handleSubmit function collects the forms input and puts it into the react state.\r\n    // event.preventDefault() is called to prevents default event behavior like refreshing the browser.\r\n    // this.props.addTodo(this.state) passes the current state (or user input) into the addTodo function defined\r\n    // in the Home.js file which then adds the input into the list.\r\n    handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      if (this.state.content.trim()) {\r\n        this.props.addTodo(this.state);\r\n        this.setState({\r\n          content: \"\",\r\n        });\r\n      }\r\n    };\r\n    \r\n    render() {\r\n      return (\r\n        // 1. The return statement should include a text field input with the handleChange function from above that\r\n        // is passed into an onChange event.\r\n        // 2. The return should also include a button with the handleSubmit function from above that is passed into\r\n        // an OnClick event.\r\n        // 3. The value of the text field also should reflect the local state of this component.\r\n        <div>\r\n        <TextField\r\n        sx={{ input: {color: 'white'}, label: {color: 'white'}}}\r\n        inputProps={{ styles: {notchedOutline: styles.notchedOutline}}}\r\n        label=\"Add New Item\"\r\n        variant=\"outlined\"\r\n        color=\"primary\"\r\n        onChange={this.handleChange}\r\n        value={this.state.content}\r\n        data-testid=\"new-item-input\"\r\n      />\r\n      <Button\r\n        style={{ marginLeft: \"10px\" }}\r\n        onClick={this.handleSubmit}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        data-testid=\"new-item-button\"\r\n      >\r\n        Add\r\n      </Button>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default AddTodo;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,eAAlC;AACA,OAAO,wBAAP;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,KAAK;EACvBC,cAAc,EAAE;IACdC,WAAW,EAAE,KADC;IAEdC,WAAW,EAAE;EAFC;AADO,CAAL,CAApB;;AAQA,MAAMC,OAAN,SAAsBR,SAAtB,CAAgC;EAC5B;EACAS,WAAW,GAAG;IACZ;;IADY,KASdC,YATc,GASEC,KAAD,IAAW;MACxB,KAAKC,QAAL,CAAc;QACZC,OAAO,EAAEF,KAAK,CAACG,MAAN,CAAaC;MADV,CAAd;IAGD,CAba;;IAAA,KAkBdC,YAlBc,GAkBEL,KAAD,IAAW;MACxBA,KAAK,CAACM,cAAN;;MACA,IAAI,KAAKC,KAAL,CAAWL,OAAX,CAAmBM,IAAnB,EAAJ,EAA+B;QAC7B,KAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKH,KAAxB;QACA,KAAKN,QAAL,CAAc;UACZC,OAAO,EAAE;QADG,CAAd;MAGD;IACF,CA1Ba;;IAEZ,KAAKK,KAAL,GAAa;MACXL,OAAO,EAAE;IADE,CAAb;EAGD,CAP2B,CAQ5B;EACA;EACA;;;EAoBAS,MAAM,GAAG;IACP;MAAA;MACE;MACA;MACA;MACA;MACA;MACA;QAAA,wBACA,QAAC,SAAD;UACA,EAAE,EAAE;YAAEC,KAAK,EAAE;cAACC,KAAK,EAAE;YAAR,CAAT;YAA2BC,KAAK,EAAE;cAACD,KAAK,EAAE;YAAR;UAAlC,CADJ;UAEA,UAAU,EAAE;YAAErB,MAAM,EAAE;cAACE,cAAc,EAAEF,MAAM,CAACE;YAAxB;UAAV,CAFZ;UAGA,KAAK,EAAC,cAHN;UAIA,OAAO,EAAC,UAJR;UAKA,KAAK,EAAC,SALN;UAMA,QAAQ,EAAE,KAAKK,YANf;UAOA,KAAK,EAAE,KAAKQ,KAAL,CAAWL,OAPlB;UAQA,eAAY;QARZ;UAAA;UAAA;UAAA;QAAA,QADA,eAWF,QAAC,MAAD;UACE,KAAK,EAAE;YAAEa,UAAU,EAAE;UAAd,CADT;UAEE,OAAO,EAAE,KAAKV,YAFhB;UAGE,OAAO,EAAC,WAHV;UAIE,KAAK,EAAC,SAJR;UAKE,eAAY,iBALd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAXE;MAAA;QAAA;QAAA;QAAA;MAAA;IANF;EA4BD;;AA3D2B;;AA8D9B,eAAeR,OAAf"},"metadata":{},"sourceType":"module"}