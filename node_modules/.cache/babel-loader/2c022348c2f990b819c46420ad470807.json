{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dmast\\\\AppData\\\\Local\\\\GitHubDesktop\\\\Projects\\\\to-do-list_week1-DevByDJ\\\\to-do-list_week1-DevByDJ\\\\src\\\\component\\\\todos.js\";\nimport React from \"react\";\nimport \"../component/todos.css\";\nimport { Card, CardContent, Grid, IconButton, ListItemButton, ListItemText, Checkbox } from \"@mui/material\";\nimport Stack from '@mui/material/Stack';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { DeleteOutlined } from \"@material-ui/icons\"; // 1. This component formats and returns the list of todos.\n// 2. Treat the question mark like an if statement.\n// If the todos array has items in the list [todos.length], we want to return the list\n// Else, return a message saying \"You have no todo's left\"\n// 3. The map function is called to assign each array item with a key\n// 4. Think of lines 14-23 as a loop. For each todo in the todo list, we want to give the list item\n// a key, and it's own card shown in the UI\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todos = _ref => {\n  let {\n    todos\n  } = _ref;\n  const todoList = todos.length ? todos.map(todo => {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Stack, {\n            sx: {\n              backgroundColor: \"darkgray\",\n              borderColor: \"darkgray\"\n            },\n            direction: \"row\",\n            spacing: 5,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                padding: \"5px\"\n              },\n              children: todo.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this)\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this);\n  }) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"whiteText\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Items\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 34\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 7\n  }, this); // Lastly, return the todoList constant that we created above to show all of the items on the screen.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todoCollection\",\n    style: {\n      padding: \"50px\"\n    },\n    children: todoList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this);\n};\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"names":["React","Card","CardContent","Grid","IconButton","ListItemButton","ListItemText","Checkbox","Stack","DeleteIcon","DeleteOutlined","Todos","todos","todoList","length","map","todo","backgroundColor","borderColor","padding","content","id"],"sources":["C:/Users/Dmast/AppData/Local/GitHubDesktop/Projects/to-do-list_week1-DevByDJ/to-do-list_week1-DevByDJ/src/component/todos.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../component/todos.css\";\r\nimport {Card,CardContent,Grid,IconButton,ListItemButton,\r\n  ListItemText,Checkbox,} from \"@mui/material\";\r\nimport Stack from '@mui/material/Stack';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport { DeleteOutlined } from \"@material-ui/icons\";\r\n\r\n\r\n// 1. This component formats and returns the list of todos.\r\n// 2. Treat the question mark like an if statement.\r\n// If the todos array has items in the list [todos.length], we want to return the list\r\n// Else, return a message saying \"You have no todo's left\"\r\n// 3. The map function is called to assign each array item with a key\r\n// 4. Think of lines 14-23 as a loop. For each todo in the todo list, we want to give the list item\r\n// a key, and it's own card shown in the UI\r\nconst Todos = ({ todos }) => {\r\n    const todoList = todos.length ? (\r\n      todos.map((todo) => {\r\n        return (\r\n          <Grid key={todo.id}>\r\n            <Card>\r\n              {/* Remember, we set the local state of this todo item when the user submits the form in \r\n              AddTodo.js. All we need to do is return the todo list item */}\r\n              <CardContent>\r\n                <Stack\r\n                sx={{\r\n                  backgroundColor: \"darkgray\",\r\n                  borderColor: \"darkgray\"\r\n                }}\r\n                direction=\"row\" spacing={5}>\r\n                <span style={{ padding: \"5px\" }}>{todo.content}  \r\n                </span>\r\n                </Stack>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        );\r\n      })\r\n    ) : (\r\n      <div className=\"whiteText\"><p>{\"No Items\"}</p></div>\r\n    );\r\n    // Lastly, return the todoList constant that we created above to show all of the items on the screen.\r\n    return (\r\n      <div className=\"todoCollection\" style={{ padding: \"50px\" }}>\r\n        {todoList}\r\n      </div>\r\n    );\r\n};\r\n  \r\nexport default Todos;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AACA,SAAQC,IAAR,EAAaC,WAAb,EAAyBC,IAAzB,EAA8BC,UAA9B,EAAyCC,cAAzC,EACEC,YADF,EACeC,QADf,QAC+B,eAD/B;AAEA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,SAASC,cAAT,QAA+B,oBAA/B,C,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,KAAK,GAAG,QAAe;EAAA,IAAd;IAAEC;EAAF,CAAc;EACzB,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,GACfF,KAAK,CAACG,GAAN,CAAWC,IAAD,IAAU;IAClB,oBACE,QAAC,IAAD;MAAA,uBACE,QAAC,IAAD;QAAA,uBAGE,QAAC,WAAD;UAAA,uBACE,QAAC,KAAD;YACA,EAAE,EAAE;cACFC,eAAe,EAAE,UADf;cAEFC,WAAW,EAAE;YAFX,CADJ;YAKA,SAAS,EAAC,KALV;YAKgB,OAAO,EAAE,CALzB;YAAA,uBAMA;cAAM,KAAK,EAAE;gBAAEC,OAAO,EAAE;cAAX,CAAb;cAAA,UAAkCH,IAAI,CAACI;YAAvC;cAAA;cAAA;cAAA;YAAA;UANA;YAAA;YAAA;YAAA;UAAA;QADF;UAAA;UAAA;UAAA;QAAA;MAHF;QAAA;QAAA;QAAA;MAAA;IADF,GAAWJ,IAAI,CAACK,EAAhB;MAAA;MAAA;MAAA;IAAA,QADF;EAmBD,CApBD,CADe,gBAuBf;IAAK,SAAS,EAAC,WAAf;IAAA,uBAA2B;MAAA,UAAI;IAAJ;MAAA;MAAA;MAAA;IAAA;EAA3B;IAAA;IAAA;IAAA;EAAA,QAvBF,CADyB,CA0BzB;;EACA,oBACE;IAAK,SAAS,EAAC,gBAAf;IAAgC,KAAK,EAAE;MAAEF,OAAO,EAAE;IAAX,CAAvC;IAAA,UACGN;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKH,CAhCD;;KAAMF,K;AAkCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}